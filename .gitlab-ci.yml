image: $CI_REGISTRY_IMAGE/node:lts-buster-slim

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
    - if: $CI_PIPELINE_SOURCE == "web"
  
stages:
  - installing deps
  - testing
  - building
  - deploying

variables:
  TRIGGER_CACHE: "off"

dependencies_cache:
  stage: installing deps
  tags: [myusine]
  script:
    - cd cicd_angular
    - npm install
    # - ls -al
  # upload du dossier node_modules dans un cache gitlab (volume docker)
  # policy push => upload uniquement
  cache:
    key: dependencies
    paths:
      - $CI_PROJECT_DIR/cicd_angular/node_modules
    policy: push
  rules:
    - changes: 
        - $CI_PROJECT_DIR/cicd_angular/package.json
    - if: $TRIGGER_CACHE == "on" 

test:
  image: $CI_REGISTRY_IMAGE/node-chrome:debian-node16
  stage: testing
  tags: [myusine]
  script:
    - cd cicd_angular
    - npm run test:ci
  rules:
    - if: $CI_COMMIT_BRANCH =~ /[0-9]+(-[a-z]+)+/
    - if: $CI_COMMIT_BRANCH == "master"
  # installation du dossier node_modules dans le conteneur avant l'exécution du script
  ## utilisation de la clé du dossier node_modules (key: dependencies)
  ## policy pull: installation uniquement
  ## untracked true: ne pas virer les caches correspondant à des fichiers non versionnés
  cache:
    key: dependencies
    policy: pull
    untracked: true

.build:
  stage: building
  tags: [myusine]
  script: 
    - cd $CI_PROJECT_DIR/cicd_angular/node_modules
  cache:
    key: dependencies
    policy: pull
    untracked: true


deploy:
  stage: deploying
  tags: [myusine]
  script: 
    - echo "deploy !!"
  environment:
    name: prod
    url: https://dawan.fr
  rules:
    # on déploit si l'objet poussé est un tag
    - if: $CI_COMMIT_TAG
    # et si on appuie sur un bouton
      when: manual

